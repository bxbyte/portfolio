@import url(./fonts.css);

* {
    padding: 0;
    margin: 0;
    border: none;
    background: none;
    text-decoration: none;
    /* Theme transition */
    transition: .5s ease-in-out;
    transition-property: color, fill, stroke, background-color, border-color, filter;
    -webkit-transition-property: fill, stroke, background-color, border-color, filter;
}

:root, a { /* Fix weird bug with Chrome */
    -webkit-transition: color .5s ease-in-out;
}

:root {
    font-family: "roboto", sans-serif;
    color: var(--c-g1-c0);
}

body {
    background-color: var(--c-g0);
}

header,
main,
footer {
    max-width: 80em;
    margin: auto;
}

/* Header related */

header {
    display: flex;
    align-items: center;
    justify-content: right;
    padding: 1em;
}

header, nav ul {
    gap: 2em;
}

header a:not(.active) {
    color: var(--c-g1-c0);
}

/* Main related */

main {
    padding: 2em;
    max-width: 76em;
    background-color: var(--c-g1);
    outline: 1px solid var(--c-g1-c0);
}

/* Footer related */

footer {
    display: flex;
    flex-direction: column;
    padding: 1em;
}

footer > div:not(.links) {
    border-top: 1px solid var(--c-g1-c0);
    padding-top: 1em;
    display: flex;
    justify-content: end;
}

footer > div:not(.links) ul {
    gap: 1em;
}

footer .links {
    padding-bottom: 1em;
    display: flex;
    gap: 2em;
}

footer .links .nav  {
    justify-self: end;
    flex-direction: column;
    justify-content: start;
    gap: .5em;
}

footer p {
    font-size: large;
    margin-bottom: .5em;
}

footer address {
    font-style: normal;
}

/* Canvas Related */

canvas {
    position: fixed;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

/* Nav related */

ul.nav {
    list-style: none;
    display: flex;
}

/* Icon related */

.icon {
    fill: none;
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Image related */

.bw {
    filter: saturate(0) brightness(var(--b));
}

/* Box related */

.p-bbox > *,
.bbox {
    outline: 1px solid var(--c-g1-c0);
}

.p-rbox > *,
.rbox {
    border-radius: 1em;
}

/* Mask related */

[is=masked-box] {
    display: none;
}

[mask] {
    overflow: hidden;
    display: block;
    position: relative;
    display: block;
}

[mask] > .mask {
    position: absolute;
}

[mask] > :not(.mask)  {
    position: relative;
}   

.mask > * {
    width: 100%;
    height: 100%;
    /* width: 100vw;
    height: 100vh; */
}

/* Window related */

.open {
    position: fixed;
    z-index: 5;
    top: 1em;
    left: 1em;
    width: calc(100vw - 2 * 1em);
    height: calc(100vh - 2 * 1em);
    transition: .5s ease-in-out, inherit;
    transition-property: top, left, width, height, inherit;
}

/* Surfaces related */

svg.surfaces {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.surfaces pattern {
    stroke: var(--c-g1-c0);
    stroke-width: 2px;
    fill: none;
}

.surface rect {
    width: 100%;
    height: 100%;
}

/* Text related */

.monoton {
    font-family: 'monoton', sans-serif;
    font-weight: 100;
    word-spacing: .5ch;
}

.pixel {
    font-family: 'pixelify', sans-serif;
    font-weight: 100;
    word-spacing: .5ch;
}

h1::first-letter, h2, h3 {
    text-transform: capitalize;
}

h1 {
    font-size: 6em;
}

h2 {
    font-size: 4em;
}

h3 {
    font-size: 2em;
}

a::after {
    position: absolute;
    content: '';
    background-color: var(--c-a0);
    width: 0%;
    height: .05em;
    bottom: 0;
    left: 0;
    transition: width .3s ease-in-out, inherit;
}

.right a::after, a.right::after {
    left:auto;
    right: 0;
}

a:hover::after {
    width: 100%;
}

a {
    position: relative;
    width: fit-content;
    color: var(--c-a0);
}

/* Animated text */

[is=anim-text] {
    display: inline-block;
    flex-direction: row;
    align-items:end;
}

[is=anim-text] span {
    display: inline-block;
    width: 1ch;
    max-height: 1em;
}

/* @keyframes fliping {
    100% {
        transform: rotateY(-360deg);
    }
}

[is="anim-text"][data-method="fliping"] span.on {
    transition: all .1s ease-in-out;
    animation: flip .2s ease forwards;
} */